plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
}

allprojects {
    group = 'org.querqy'
    version = '1.0.1-SNAPSHOT'
}

ext {
    querqyCoreVersion = '3.15.0'
    elasticsearchVersion = '7.17.8'
}

dependencies {
    api "org.querqy:querqy-core:${querqyCoreVersion}"

    compileOnly "co.elastic.clients:elasticsearch-java:${elasticsearchVersion}"

    // Testing
    testImplementation "org.assertj:assertj-core:3.23.1"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:4.11.0"
    testImplementation "co.elastic.clients:elasticsearch-java:${elasticsearchVersion}"

    // Lombok
    compileOnly "org.projectlombok:lombok:1.18.24"
    annotationProcessor "org.projectlombok:lombok:1.18.24"
    testCompileOnly "org.projectlombok:lombok:1.18.24"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.24"
}

test {
    useJUnit()
}


java {
    withJavadocJar()
    withSourcesJar()
    sourceCompatibility = 11
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'org.querqy'
            artifactId = 'querqy-unplugged'
            version = "$version"

            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Querqy Unplugged'
                description = 'A library to handle query rewriting outside of a search engine'
                url = 'https://querqy.org'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jope'
                        name = 'Johannes Peter'
                        email = 'johannesdaniel.peter@gmx.de'
                    }
                }
                scm {
                    url = 'git@github.com:querqy/querqy-unplugged.git'
                    connection = 'scm:git:git@github.com:querqy/querqy-unplugged.git'
                    developerConnection = 'scm:git:git@github.com:querqy/querqy-unplugged.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'

            name = 'sonatype'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials)
        }
    }
}
/*
signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
*/

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}